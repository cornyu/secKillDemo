<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ff.second.kill.web.dao.IStockDao" >

  <resultMap id="BaseResultMap" type="com.ff.second.kill.web.pojo.Stock" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="sale" property="sale" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, count, sale, version, remark
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from stock 
  </select>
  
  
  <select id="getStockById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from stock
    where id = #{id,jdbcType=BIGINT}
  </select>
  
   <update id="updateCount" parameterType="com.ff.second.kill.web.pojo.Stock" >
    update stock
    set count= #{count,jdbcType=INTEGER},sale=#{sale,jdbcType=INTEGER},version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   
   <update id="updateStockById" parameterType="com.ff.second.kill.web.pojo.Stock" >
    update stock
    set sale = #{sale,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
   <update id="updateByOptimistic" parameterType="com.ff.second.kill.web.pojo.Stock" >
    update stock 
    set sale = #{sale,jdbcType=INTEGER},version = (#{version,jdbcType=INTEGER} + 1)
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=INTEGER}
  </update>
  
  
  <select id="getStock" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from stock
    <where> 
    <if test="id != null">
         id = #{id}
    </if> 
    <if test="name != null">
        AND name like #{name}
    </if>
    <if test="sale != null">
        AND sale = #{sale}
    </if>
     <if test="remark != null">
        AND remark = #{remark}
    </if>
  </where>
  </select>
  
  
</mapper>